{"version":3,"sources":["src/utils/elements.js","src/utils/string.js","src/utils/math.js","node_modules/marked/lib/marked.js","src/utils/write.js","src/utils/utils.js","src/movement/direction.js","0","src/classes/Room.js","src/movement/position.js","src/play.js","src/input.js","src/index.js"],"names":["Input","document","getElementById","Enter","Screen","normalize","string","trim","toLowerCase","rollD","number","Math","floor","random","coinFlip","shuffle","array","currentIndex","temporaryValue","randomIndex","length","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","tokens","links","Object","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","push","type","rtrim","lang","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","baseUrls","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","out","prevCapZero","inLink","inRawBlock","outputLink","escapes","codespan","mangle","smartypants","image","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","listitem","checkbox","tablerow","content","tablecell","flags","baseUrl","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer","module","exports","define","amd","window","global","scrollToBottom","scrollTop","scrollHeight","clearScreen","firstChild","removeChild","writeToScreen","input","innerHTML","writeUserInput","DIRECTIONS","north","abbr","full","east","south","west","back","abbrDirectionsInOrder","mapAbbrDirectionToFull","mapAbbrDirectionToOpposite","store room","description","exits","bathroom","bedroom","dining room","hallway","kitchen","library","sitting room","study","Room","generateExits","enterDirection","numberOfExits","ROOM_DATA","shuffledDirections","current","includes","filter","direction","getRandomRoom","keys","map","exit","currentPosition","positionHistory","writePosition","go","userDidMove","shouldCreateNewRoom","currentRoom","directionInitial","unshift","currentPositionString","newRoom","enteredRoom","writeDescription","writeExits","play","executeCommand","rawInput","command","rest","commandRouter","clear","check","sdg","getInput","actOnEnter","event","click","addEventListener"],"mappings":"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","file":"src.5dcc7dcb.map","sourceRoot":"..","sourcesContent":["export const Input = document.getElementById('Input')\nexport const Enter = document.getElementById('Enter')\nexport const Screen = document.getElementById('Screen')\n","export function normalize(string) {\n    return string.trim().toLowerCase()\n}\n","export function rollD(number) {\n    return Math.floor(Math.random() * number) + 1\n}\n\nexport function coinFlip() {\n    return rollD(2) === 1\n}\n\nexport function shuffle(array) {\n    let currentIndex = array.length\n    let temporaryValue\n    let randomIndex\n\n    while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex)\n        currentIndex -= 1\n\n        temporaryValue = array[currentIndex]\n        array[currentIndex] = array[randomIndex]\n        array[randomIndex] = temporaryValue\n    }\n\n    return array\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])[\\s\\S]*?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|$', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|$')\n    .getRegex()\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import marked from 'marked'\nimport { Screen } from './elements'\n\nfunction scrollToBottom() {\n    Screen.scrollTop = Screen.scrollHeight\n}\n\nexport function clearScreen() {\n    while (Screen.firstChild) {\n        Screen.removeChild(Screen.firstChild)\n    }\n    writeToScreen('*Screen cleared*')\n}\n\nexport function writeToScreen(input) {\n    Screen.innerHTML += marked(input)\n    scrollToBottom()\n}\n\nexport function writeUserInput(input) {\n    writeToScreen(`&gt; ${input}`)\n}\n","export * from './string'\nexport * from './math'\nexport * from './write'\n","export const DIRECTIONS = {\n    north: {\n        abbr: 'n',\n        full: 'north'\n    },\n    east: {\n        abbr: 'e',\n        full: 'east'\n    },\n    south: {\n        abbr: 's',\n        full: 'south'\n    },\n    west: {\n        abbr: 'w',\n        full: 'west'\n    },\n    back: {\n        abbr: 'b',\n        full: 'back'\n    }\n}\n\nexport const abbrDirectionsInOrder = [\n    DIRECTIONS.north.abbr,\n    DIRECTIONS.east.abbr,\n    DIRECTIONS.south.abbr,\n    DIRECTIONS.west.abbr\n]\nconst mapAbbrDirectionToFull = {}\n\nfor (let key in DIRECTIONS) {\n    mapAbbrDirectionToFull[DIRECTIONS[key].abbr] = DIRECTIONS[key].full\n}\n\nexport { mapAbbrDirectionToFull }\n\nexport const mapAbbrDirectionToOpposite = {\n    [DIRECTIONS.north.abbr]: DIRECTIONS.south.abbr,\n    [DIRECTIONS.east.abbr]: DIRECTIONS.west.abbr,\n    [DIRECTIONS.south.abbr]: DIRECTIONS.north.abbr,\n    [DIRECTIONS.west.abbr]: DIRECTIONS.east.abbr\n}\n",null,"import { shuffle, writeToScreen } from '../utils'\nimport {\n    abbrDirectionsInOrder,\n    mapAbbrDirectionToFull,\n    mapAbbrDirectionToOpposite\n} from '../movement/direction'\nimport ROOM_DATA from '../data/rooms.json'\n\nfunction generateExits(enterDirection = undefined, type) {\n    const numberOfExits = ROOM_DATA[type].exits\n    const exits = []\n    if (enterDirection) exits.push(mapAbbrDirectionToOpposite[enterDirection])\n    const shuffledDirections = shuffle(abbrDirectionsInOrder)\n    let i = 0\n    while (exits.length < numberOfExits) {\n        const current = shuffledDirections[i]\n        if (!exits.includes(current)) exits.push(current)\n        i++\n    }\n    return abbrDirectionsInOrder.filter((direction) =>\n        exits.includes(direction)\n    )\n}\n\nfunction getRandomRoom(enterDirection) {\n    if (enterDirection) {\n        const keys = Object.keys(ROOM_DATA)\n        return keys[Math.floor(Math.random() * keys.length)]\n    }\n    return 'hallway'\n}\n\nclass Room {\n    constructor(enterDirection) {\n        this.type = getRandomRoom(enterDirection)\n        this.description = ROOM_DATA[this.type].description\n        this.exits = generateExits(enterDirection, this.type)\n        // this.itemCount = 5\n    }\n\n    // set item(value) {\n    //     this.itemCount = this.itemCount + value\n    // }\n\n    writeDescription() {\n        return writeToScreen(this.description)\n    }\n\n    writeExits() {\n        return writeToScreen(\n            `Exits: ${this.exits\n                .map((exit) => mapAbbrDirectionToFull[exit])\n                .join(', ')}`\n        )\n    }\n}\n\nexport default Room\n","import { writeToScreen } from '../utils'\nimport { DIRECTIONS, mapAbbrDirectionToFull } from './direction'\nimport Room from '../classes/Room'\n\nexport let currentPosition = [0, 0]\nexport let positionHistory = [[...currentPosition]]\nexport const map = {\n    '0,0': new Room()\n}\n\nfunction writePosition(direction) {\n    writeToScreen(\n        `You travel ${\n            direction.length === 1\n                ? mapAbbrDirectionToFull[direction]\n                : direction\n        }. Current location: ${currentPosition.join(', ')}`\n    )\n}\n\nexport function go(direction) {\n    let userDidMove = true\n    let shouldCreateNewRoom = true\n    const currentRoom = map[currentPosition.join()]\n    const directionInitial = direction[0]\n    if (\n        currentRoom.exits.includes(directionInitial) ||\n        directionInitial === DIRECTIONS.back.abbr\n    ) {\n        switch (direction) {\n            case DIRECTIONS.north.full:\n            case DIRECTIONS.north.abbr:\n                currentPosition[1]++\n                positionHistory.unshift([...currentPosition])\n                break\n            case DIRECTIONS.east.full:\n            case DIRECTIONS.east.abbr:\n                currentPosition[0]++\n                positionHistory.unshift([...currentPosition])\n                break\n            case DIRECTIONS.south.full:\n            case DIRECTIONS.south.abbr:\n                currentPosition[1]--\n                positionHistory.unshift([...currentPosition])\n                break\n            case DIRECTIONS.west.full:\n            case DIRECTIONS.west.abbr:\n                currentPosition[0]--\n                positionHistory.unshift([...currentPosition])\n                break\n            case DIRECTIONS.back.full:\n            case DIRECTIONS.back.abbr:\n                if (positionHistory.length > 1) {\n                    positionHistory = positionHistory.slice(1)\n                    currentPosition = [...positionHistory[0]]\n                    shouldCreateNewRoom = false\n                } else {\n                    writeToScreen(`You cannot go back.`)\n                    userDidMove = false\n                }\n                break\n            case undefined:\n                writeToScreen(`You must include a direction.`)\n                break\n            default:\n                return writeToScreen(`I don't recognize that direction.`)\n        }\n\n        if (direction && userDidMove) {\n            const currentPositionString = currentPosition.join()\n            if (shouldCreateNewRoom && !map[currentPositionString]) {\n                const newRoom = new Room(direction[0])\n                map[currentPositionString] = newRoom\n            }\n            const enteredRoom = map[currentPositionString]\n            writePosition(direction)\n            enteredRoom.writeDescription()\n            enteredRoom.writeExits()\n        }\n    } else {\n        writeToScreen('There is no exit in that direction.')\n    }\n}\n","import { clearScreen, normalize, writeToScreen, writeUserInput } from './utils'\nimport { currentPosition, go } from './movement/position'\n\nfunction executeCommand(rawInput) {\n    const input = normalize(rawInput)\n    const [command, ...rest] = input.split(' ')\n\n    const commandRouter = {\n        clear: () => clearScreen(),\n        // This needs to be broken out into a separate function\n        check: () => writeToScreen(`Current location: ${currentPosition}`),\n        go: () => go(...rest),\n        sdg: () => writeToScreen('Soli Deo gloria!')\n    }\n\n    if (commandRouter[command]) {\n        commandRouter[command]()\n    } else {\n        writeToScreen(\"I don't understand.\")\n    }\n}\n\nfunction play(input) {\n    writeUserInput(input)\n    executeCommand(input)\n}\n\nexport default play\n","import { Input, Enter } from './utils/elements'\nimport play from './play'\n\nfunction getInput() {\n    const { value } = Input\n    if (value) {\n        play(value)\n        Input.value = ''\n    }\n}\n\nEnter.addEventListener('click', getInput)\n\nfunction actOnEnter(event) {\n    if (event.key === 'Enter') {\n        Enter.click()\n    }\n}\n\nInput.addEventListener('keypress', actOnEnter)\n","// On load\nimport './input'\n\n// eslint-disable-next-line\nconsole.log(\n    'Thank you for playing %cEscape from McPherson Manor%c!\\n\\nIf you liked this game, checkout some of my other projects:\\n👉 https://github.com/seanmcp',\n    'font-style: italic',\n    'font-style: normal'\n)\n"]}